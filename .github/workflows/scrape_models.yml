name: Scrape Ollama Models

on:
  # Run daily at 0011 UTC 
  schedule:
    - cron: '11 00 * * *'

  # Allow manual trigger
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Run in dry-run mode (no commits)'
        required: false
        default: false
        type: boolean

  # Run on pushes to main for production
  push:
    branches: [ main ]
    paths: [ 'scripts/**', '.github/workflows/**' ]

jobs:
  scrape-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Required to push changes
      pages: write     # Required for GitHub Pages
      id-token: write  # Required for GitHub Pages

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run scraper (dry-run for testing)
      if: github.event.inputs.dry_run == 'true'
      run: npm run test

    - name: Run scraper (production)
      if: github.event_name == 'schedule' || github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run != 'true')
      run: npm run scrape

    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet data/ && git diff --quiet models.json models-summary.json last-updated.txt 2>/dev/null; then
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No changes detected in data files or root JSON files"
        else
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Changes detected in data files or root JSON files"
          git diff --stat data/ 2>/dev/null || true
          git diff --stat models.json models-summary.json last-updated.txt 2>/dev/null || true
        fi

    - name: Commit and push changes
      if: steps.changes.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/
        git add models.json models-summary.json last-updated.txt 2>/dev/null || true
        git commit -m "Update Ollama models data - $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        git push

    - name: Upload data as artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ollama-models-data
        path: data/
        retention-days: 30

    # GitHub Pages deployment
    - name: Setup Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v4

    - name: Copy JSON files to repo root
      if: github.ref == 'refs/heads/main'
      run: |
        if [ -d "data" ] && [ "$(ls -A data)" ]; then
          cp data/models.json ./
          cp data/models-summary.json ./
          cp data/last-updated.txt ./
          echo "JSON files copied to repo root"
        else
          echo "No data files to copy to root"
        fi

    - name: Prepare Pages content
      if: github.ref == 'refs/heads/main'
      run: |
        mkdir -p _site
        cp index.html _site/
        cp README.md _site/
        if [ -d "data" ] && [ "$(ls -A data)" ]; then
          cp -r data/* _site/
        else
          echo "Warning: No data directory or empty data directory"
          echo '{"error": "Data not available"}' > _site/models.json
          echo '{"error": "Data not available"}' > _site/models-summary.json
          echo "$(date -u)" > _site/last-updated.txt
        fi

    - name: Upload to Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: '_site/'

    - name: Deploy to Pages
      if: github.ref == 'refs/heads/main'
      id: deployment
      uses: actions/deploy-pages@v4
